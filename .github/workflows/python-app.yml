# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Download test reporter
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Before script
      run: ./cc-test-reporter before-build
    - name: Test with pytest
      run: |
        pytest --cov-report xml --cov=tests/
    - name: After script
      run: |
        ./cc-test-reporter after-build --exit-code $TEST_RESULT
        if [[ "$TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi
      env:
        CC_TEST_REPORTER_ID: 2cda39f203d23db5921d33ace20a486bbb5b9520a90171dd15bdf294cf243f33
